fn main() {
    // point 包含内存地址的通用概念
    // rust 中最常见的就是引用，&作为操作符借用所指向的值 

    // smart point是一类数据结构，除了表现的像指针，还会包含额外的元数据和功能

    // 在 Rust 中，普通引用和智能指针的一个额外的区别是引用是一类只借用数据的指针；相反，在大部分情况下，智能指针 拥有 它们指向的数据
    
    // 智能指针通常使用结构体实现和常规结构体的显著差别主要在于实现了Deref和Drop trait

    // 最常用的主要标准库的几个智能指针
    // Box<T> 用于在堆上分配值
    // Rc<T> 一个引用计数，数据可以有多个所有者
    // Ref<T> 和 RefMut<T>，通过 RefCell<T> 访问（ RefCell<T> 是一个在运行时而不是在编译时执行借用规则的类型）
}
